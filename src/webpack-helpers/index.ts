/*
 * Copyright Fastly, Inc.
 * Licensed under the MIT license. See LICENSE file for details.
 */

import path from "path";
import { Configuration, ProvidePlugin } from "webpack";

export function apply(webpackConfig: Configuration): Configuration {

  // Modify the stock webpack config generated by the compute@edge starter

  return Object.assign({},
    webpackConfig,
    {
      experiments: {
        topLevelAwait: true
      },
      resolve: {
        ...(webpackConfig?.resolve ?? {}),
        // TEMPORARY:
        // Default is [ "browser", "module", "main" ], but we remove 'module'
        // because some opentelemetry libs don't ship with the
        // appropriate module entry points.
        // A fix for this will be coming in the next release (>=0.29) of the
        // opentelemetry packages.
        mainFields: [ 'browser', 'main' ],
        alias: {
          "document": path.resolve(__dirname, "./shims/document"),
          "process": path.resolve(__dirname, "./shims/process"),
          "perf_hooks": path.resolve(__dirname, "./shims/perf_hooks"),
        },
        fallback: {
          "assert": require.resolve("assert/"),
          "buffer": require.resolve("buffer/"),
          "stream": require.resolve("stream-browserify"),
          "timers": require.resolve("timers-browserify"),
          "util": require.resolve("util/"),
          "zlib": require.resolve("browserify-zlib"),
        },
      },
      plugins: [
        ...(webpackConfig?.plugins ?? []),
        new ProvidePlugin({
          process: "process",
          performance: [ "perf_hooks", "performance" ],
          document: [ "document", "document" ],
        })
      ],
    });

}
